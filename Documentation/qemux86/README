        QEMU-x86 Board Support Package

1. About this document
======================

This document contains common and non-hardware specific information.
Please refer to README.hardware for hardware specific information.

Dependencies
------------
This layer depends on the oe-core version supplied with Wind River
Linux and the wr-kernel layer.


Maintenance
-----------
This layer is maintained by Wind River Systems, Inc.
Contact <support@windriver.com> or your support representative for more
information on submitting changes.


Building the qemux86 layer
--------------------------
This layer and the wr-kernel layer should be added to bblayers.conf. This
is done automatically when using the Wind River configure wrapper.


License
-------
Copyright (C) 2012-2013 Wind River Systems, Inc.

Source code included in the tree for individual recipes is under the LICENSE
stated in the associated recipe (.bb file) unless otherwise stated.

The metadata is under the following license unless otherwise stated.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.


2. Board Specific Patches
=========================

To get a list of patches applied to the kernel specific to this BSP,
along with patch descriptions, use git to see what changed on the default
kernel (git whatchanged <kernel_type>..<bsp_name>). For example:

  # cd build/linux-windriver-<version>/linux
  # git whatchanged standard/base..HEAD


3. Boot Instructions
====================

Since this BSP is targeted at a QEMU simulated board, run the command
below in the project directory to load the BSP on top of QEMU:

$ make start-target


3.1 NFS Root File System
------------------------

By default, the guest system running in QEMU uses NFS rootfs.

3.2 RAM Root File System (initramfs)
---------------------------------

3.2.1 Create the initrd image
-----------------------------

Build the gzip'd initramfs image with:

$ make bbs
$ bitbake wrlinux-image-initramfs
$ exit

The resulting file can be found at export/qemux86-wrlinux-image-glibc-small-standard-dist.cpio.gz


3.2.2 Deployment
----------------

Pass the run-time option "-initrd" in TARGET_QEMU_OPTS to use the
initramfs image as a ram disk, as shown in the example below.

And use the 'root=/dev/ram' kernel command line option. For example, 
run the following command in the project directory to load the guest
in QEMU using initrd:

$ make start-target \
TARGET_QEMU_OPTS="-initrd `pwd`/export/qemux86-wrlinux-image-glibc-small-standard-dist.cpio.gz" \
TARGET_QEMU_KERNEL_OPTS=root=/dev/ram


3.3 Virtual disk in QEMU
------------------------

3.3.1 Create virtual disk image
-------------------------------

Add '--enable-bootimage=ext3' when configuring the project as shown below:

.../wrlinux/configure --enable-bootimage=ext3 \
--enable-kernel=standard+cfg/virtio.scc \
--enable-rootfs=glibc_small --enable-board=qemux86 ...

Or:

by edit <project-dir>/local.conf manually, make sure there is one
line as shown below:

IMAGE_FSTYPES += "ext3"

Then run 'make fs' again.  After 'make fs' completes, you can find the 
virtual disk image at:

<project-dir>/images/qemux86-wrlinux-image-<rootfs type>-<kernel type>-dist.ext3

Eg. qemux86-wrlinux-image-glibc-small-standard-dist.ext3

3.3.2 Related kernel options
----------------------------

Make sure the project is configured with:

	--enable-kernel=standard+cfg/virtio.scc


3.3.3 Deployment
----------------

Pass the command line option TARGET_QEMU_OPTS to QEMU as shown:

 -drive if=virtio,file=<path to virtual disk image file>

And pass kernel command line options to the guest like this:

 root=/dev/vda

For example, run the following command within the project directory:

$ make start-target \
TARGET_QEMU_OPTS=" -drive if=virtio,file=`pwd`/export/qemux86-wrlinux-image-glibc-small-standard-dist.ext3" \
TARGET_QEMU_KERNEL_OPTS=root=/dev/vda


3.4 Simics Support
------------------

The BSP can run on Simics x86-440BX model.

3.4.1 NFS Root File System
--------------------------

By default, the guest system running on Simics uses NFS rootfs by run:
$ make start-simics

3.4.2 Hard Disk Root
--------------------

Assuming the ext3 rootfs image has been generated by follwoing the above
instructions.

For example, run the following command in the project directory:
$ make start-simics TOPTS="-disk $PWD/export/qemux86-wrlinux-image-glibc-small-standard-dist.ext3" \
        TARGET_VIRT_BOOT_TYPE=disk

3.4.3 Initramfs
---------------

For the initramfs boot, the below can be done:

The following command will generate a rootfs from export/dist
$ make start-simics TARGET_SIMICS_BUILD_INITRD_PLUS=1
The following command will start the system from the initramfs
$ make start-simics TARGET_VIRT_BOOT_TYPE=custom \
        TARGET_VIRT_IP=none \
        TARGET_SIMICS_INITRD=`pwd`/initrd \
        EX_TARGET_SIMICS_KERNEL_OPTS="rdinit=/sbin/init"


4. Target Notes
===============

4.1 OProfile
============
This BSP does not have a usable implementation of hardware performance
counters, so OProfile must be used in timer mode. If you are
using OProfile, you will need to add "oprofile.timer=1" to your kernel boot
options.
